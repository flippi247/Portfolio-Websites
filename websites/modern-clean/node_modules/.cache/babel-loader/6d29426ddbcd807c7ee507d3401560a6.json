{"ast":null,"code":"import _objectWithoutProperties from \"/Users/pweinmann/GoogleDrive/7-Coding/1-Eigene Projekte/Websites/Portfolio/templates/modern-clean/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const _useUncontrolled = useUncontrolled(props, {\n      value: 'onChange'\n    }),\n    children = _useUncontrolled.children,\n    _useUncontrolled$type = _useUncontrolled.type,\n    type = _useUncontrolled$type === void 0 ? 'radio' : _useUncontrolled$type,\n    name = _useUncontrolled.name,\n    value = _useUncontrolled.value,\n    onChange = _useUncontrolled.onChange,\n    _useUncontrolled$vert = _useUncontrolled.vertical,\n    vertical = _useUncontrolled$vert === void 0 ? false : _useUncontrolled$vert,\n    controlledProps = _objectWithoutProperties(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\", \"vertical\"]);\n  const getValues = () => value == null ? [] : [].concat(value);\n  const handleToggle = (inputVal, event) => {\n    if (!onChange) {\n      return;\n    }\n    const values = getValues();\n    const isActive = values.indexOf(inputVal) !== -1;\n    if (type === 'radio') {\n      if (!isActive) onChange(inputVal, event);\n      return;\n    }\n    if (isActive) {\n      onChange(values.filter(n => n !== inputVal), event);\n    } else {\n      onChange([...values, inputVal], event);\n    }\n  };\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/_jsx(ButtonGroup, {\n    ...controlledProps,\n    ref: ref,\n    vertical: vertical,\n    children: map(children, child => {\n      const values = getValues();\n      const _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n      const handler = e => handleToggle(childVal, e);\n      return /*#__PURE__*/React.cloneElement(child, {\n        type,\n        name: child.name || name,\n        checked: values.indexOf(childVal) !== -1,\n        onChange: chainFunction(childOnChange, handler)\n      });\n    })\n  });\n});\nexport default Object.assign(ToggleButtonGroup, {\n  Button: ToggleButton\n});","map":{"version":3,"names":["React","invariant","useUncontrolled","chainFunction","map","ButtonGroup","ToggleButton","jsx","_jsx","ToggleButtonGroup","forwardRef","props","ref","_useUncontrolled","value","children","_useUncontrolled$type","type","name","onChange","_useUncontrolled$vert","vertical","controlledProps","_objectWithoutProperties","getValues","concat","handleToggle","inputVal","event","values","isActive","indexOf","filter","n","process","env","NODE_ENV","child","_child$props","childVal","childOnChange","handler","e","cloneElement","checked","Object","assign","Button"],"sources":["/Users/pweinmann/GoogleDrive/7-Coding/1-Eigene Projekte/Websites/Portfolio/templates/modern-clean/react-portfolio/node_modules/react-bootstrap/esm/ToggleButtonGroup.js"],"sourcesContent":["import * as React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    children,\n    type = 'radio',\n    name,\n    value,\n    onChange,\n    vertical = false,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    value: 'onChange'\n  });\n  const getValues = () => value == null ? [] : [].concat(value);\n  const handleToggle = (inputVal, event) => {\n    if (!onChange) {\n      return;\n    }\n    const values = getValues();\n    const isActive = values.indexOf(inputVal) !== -1;\n    if (type === 'radio') {\n      if (!isActive) onChange(inputVal, event);\n      return;\n    }\n    if (isActive) {\n      onChange(values.filter(n => n !== inputVal), event);\n    } else {\n      onChange([...values, inputVal], event);\n    }\n  };\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/_jsx(ButtonGroup, {\n    ...controlledProps,\n    ref: ref,\n    vertical: vertical,\n    children: map(children, child => {\n      const values = getValues();\n      const {\n        value: childVal,\n        onChange: childOnChange\n      } = child.props;\n      const handler = e => handleToggle(childVal, e);\n      return /*#__PURE__*/React.cloneElement(child, {\n        type,\n        name: child.name || name,\n        checked: values.indexOf(childVal) !== -1,\n        onChange: chainFunction(childOnChange, handler)\n      });\n    })\n  });\n});\nexport default Object.assign(ToggleButtonGroup, {\n  Button: ToggleButton\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}