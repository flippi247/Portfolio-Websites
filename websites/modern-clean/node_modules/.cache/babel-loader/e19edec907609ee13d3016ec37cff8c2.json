{"ast":null,"code":"import _slicedToArray from \"/Users/pweinmann/GoogleDrive/7-Coding/1-Eigene Projekte/Websites/Portfolio/templates/modern-clean/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nconst _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let _ref$show = _ref.show,\n    show = _ref$show === void 0 ? false : _ref$show,\n    _ref$role = _ref.role,\n    role = _ref$role === void 0 ? 'dialog' : _ref$role,\n    className = _ref.className,\n    style = _ref.style,\n    children = _ref.children,\n    _ref$backdrop = _ref.backdrop,\n    backdrop = _ref$backdrop === void 0 ? true : _ref$backdrop,\n    _ref$keyboard = _ref.keyboard,\n    keyboard = _ref$keyboard === void 0 ? true : _ref$keyboard,\n    onBackdropClick = _ref.onBackdropClick,\n    onEscapeKeyDown = _ref.onEscapeKeyDown,\n    transition = _ref.transition,\n    runTransition = _ref.runTransition,\n    backdropTransition = _ref.backdropTransition,\n    runBackdropTransition = _ref.runBackdropTransition,\n    _ref$autoFocus = _ref.autoFocus,\n    autoFocus = _ref$autoFocus === void 0 ? true : _ref$autoFocus,\n    _ref$enforceFocus = _ref.enforceFocus,\n    enforceFocus = _ref$enforceFocus === void 0 ? true : _ref$enforceFocus,\n    _ref$restoreFocus = _ref.restoreFocus,\n    restoreFocus = _ref$restoreFocus === void 0 ? true : _ref$restoreFocus,\n    restoreFocusOptions = _ref.restoreFocusOptions,\n    renderDialog = _ref.renderDialog,\n    _ref$renderBackdrop = _ref.renderBackdrop,\n    renderBackdrop = _ref$renderBackdrop === void 0 ? props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)) : _ref$renderBackdrop,\n    providedManager = _ref.manager,\n    containerRef = _ref.container,\n    onShow = _ref.onShow,\n    _ref$onHide = _ref.onHide,\n    onHide = _ref$onHide === void 0 ? () => {} : _ref$onHide,\n    onExit = _ref.onExit,\n    onExited = _ref.onExited,\n    onExiting = _ref.onExiting,\n    onEnter = _ref.onEnter,\n    onEntering = _ref.onEntering,\n    onEntered = _ref.onEntered,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const _useState = useState(!show),\n    _useState2 = _slicedToArray(_useState, 2),\n    exited = _useState2[0],\n    setExited = _useState2[1];\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","map":{"version":3,"names":["_excluded","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","activeElement","contains","canUseDOM","listen","useState","useRef","useCallback","useImperativeHandle","forwardRef","useEffect","React","ReactDOM","useMounted","useWillUnmount","usePrevious","useEventCallback","ModalManager","useWaitForDOMRef","useWindow","renderTransition","isEscKey","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","manager","getManager","window","ownerDocument","document","useModalManager","provided","modalManager","modal","dialog","backdrop","assign","current","add","remove","isTopModal","setDialogRef","ref","setBackdropRef","Modal","_ref","_ref$show","show","_ref$role","role","className","style","children","_ref$backdrop","_ref$keyboard","keyboard","onBackdropClick","onEscapeKeyDown","transition","runTransition","backdropTransition","runBackdropTransition","_ref$autoFocus","autoFocus","_ref$enforceFocus","enforceFocus","_ref$restoreFocus","restoreFocus","restoreFocusOptions","renderDialog","_ref$renderBackdrop","renderBackdrop","props","providedManager","containerRef","container","onShow","_ref$onHide","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","ownerWindow","isMounted","prevShow","_useState","_useState2","_slicedToArray","exited","setExited","lastFocusRef","handleShow","removeKeydownListenerRef","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","e","currentTarget","defaultPrevented","handleHidden","args","dialogProps","undefined","tabIndex","cloneElement","unmountOnExit","mountOnEnter","appear","in","backdropElement","onClick","createPortal","displayName","Manager"],"sources":["/Users/pweinmann/GoogleDrive/7-Coding/1-Eigene Projekte/Websites/Portfolio/templates/modern-clean/react-portfolio/node_modules/@restart/ui/esm/Modal.js"],"sourcesContent":["const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}